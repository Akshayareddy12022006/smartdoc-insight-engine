
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { FileText, Download, ExternalLink, Clock, FileType } from "lucide-react";
import { Button } from "@/components/ui/button";

interface Document {
  id: string;
  title: string;
  filename: string;
  content: string;
  relevanceScore: number;
  pageNumber?: number;
}

interface DocumentResultProps {
  document: Document;
}

const DocumentResult = ({ document }: DocumentResultProps) => {
  const getFileIcon = (filename: string) => {
    if (filename.endsWith(".pdf")) {
      return <FileText className="h-6 w-6" />;
    } else if (filename.endsWith(".docx")) {
      return <FileText className="h-6 w-6" />;
    } else if (filename.endsWith(".ppt") || filename.endsWith(".pptx")) {
      return <FileType className="h-6 w-6" />;
    } else {
      return <FileText className="h-6 w-6" />;
    }
  };

  // Mock summary that would normally be generated by AI
  const aiSummary = `This document discusses the ${document.title.toLowerCase()} with key details about implementation strategies and resource allocation. It provides insights into timeline, budget constraints, and expected outcomes.`;

  // Mock related documents
  const relatedDocuments = [
    {
      id: "related-1",
      title: "Team Meeting Notes",
      similarity: "78%",
    },
    {
      id: "related-2",
      title: "Financial Report 2024",
      similarity: "65%",
    },
  ];

  return (
    <div className="space-y-6 mt-4">
      <Card>
        <CardHeader className="flex flex-row items-center justify-between">
          <div className="flex items-center gap-3">
            {getFileIcon(document.filename)}
            <div>
              <CardTitle>{document.title}</CardTitle>
              <p className="text-sm text-muted-foreground">
                {document.filename}
              </p>
            </div>
          </div>
          <div className="flex gap-2">
            <Button variant="outline" size="sm">
              <Download className="mr-2 h-4 w-4" /> Download
            </Button>
            <Button size="sm">
              <ExternalLink className="mr-2 h-4 w-4" /> Open
            </Button>
          </div>
        </CardHeader>
        <CardContent className="space-y-6">
          {/* Document preview (placeholder) */}
          <div className="border rounded-md h-72 bg-muted/50 flex items-center justify-center">
            <p className="text-muted-foreground">
              Document preview would appear here
            </p>
          </div>

          {/* AI Generated Summary */}
          <div className="space-y-2">
            <div className="flex items-center gap-2">
              <h3 className="font-medium">AI Summary</h3>
              <Badge variant="outline" className="text-xs">
                <Clock className="mr-1 h-3 w-3" /> Generated just now
              </Badge>
            </div>
            <Card className="bg-primary/5 border-primary/10">
              <CardContent className="p-4">
                <p className="text-sm">{aiSummary}</p>
              </CardContent>
            </Card>
          </div>

          {/* Key excerpt from the document */}
          <div className="space-y-2">
            <h3 className="font-medium">Key Excerpt</h3>
            <Card className="border-muted">
              <CardContent className="p-4">
                <p className="text-sm italic">{document.content}</p>
                {document.pageNumber && (
                  <p className="text-xs text-muted-foreground mt-2">
                    Found on page {document.pageNumber}
                  </p>
                )}
              </CardContent>
            </Card>
          </div>

          {/* Related documents */}
          <div className="space-y-3">
            <h3 className="font-medium">Related Documents</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {relatedDocuments.map((doc) => (
                <Card key={doc.id} className="bg-background">
                  <CardContent className="p-4 flex items-center justify-between">
                    <div className="flex items-center gap-2">
                      <FileText className="h-5 w-5 text-primary" />
                      <span className="text-sm">{doc.title}</span>
                    </div>
                    <Badge variant="secondary">{doc.similarity} similar</Badge>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default DocumentResult;
